# Starting from Drupal 10.1 css and js aggregated files are served on a new "assets://" stream and in a lazy mode
# (https://www.drupal.org/node/2888767). This means that upon drush cr, assets aren't created immediately but only when
# the path tot the file is hit (for example: sites/default/files/css/css_XXXX.css).
# Drupal 10.1 also introduced 2 new custom routes within system module to serve aggregated files.
# Here we try to serve the assets with the bucket, if they exists, otherwise we forward the call back to php using
# @rewriteQuery rule. On Drupal side we have to make sure that aggregated files are stored over s3fs like other files
# otherwise this rule will keep forwarding the call to php.

location ~* /${DRUPAL_ASSETS_FILES_PATH}/(css|js)/(.*) {
    set $bucket_base_url ${NGINX_OSB_BUCKET}${NGINX_OSB_ASSETS_PATH};
    set $file_path $1/$2;
    resolver ${NGINX_OSB_RESOLVER};

    # Remove any existant Cache-Control header to prevent duplicated headers and
    # allow us to override it a line below.
    proxy_hide_header Cache-Control;
    add_header Cache-Control "${NGINX_CACHE_CONTROL_HEADER}";

    # Here we use proxy_intercept_errors to catch 404 and 403 errors from bucket and rewrite them to Drupal.
    proxy_intercept_errors on;
    # Here we catch both 404 and 403 because each bucket provider can reply differently to a missing file.
    # Minio, for example, replies with a 404 while Google Cloud Storage or AWS replies with a 403.
    error_page 404 = @rewriteQuery;
    error_page 403 = @rewriteQuery;
    # Here we can include any custom location fragment.
    include /etc/nginx/conf.d/fragments/location/osb/*.conf;
    proxy_pass $bucket_base_url/$file_path$is_args$args;

    # Remove Authorization header if present.
    proxy_set_header Authorization "";

    #hidegoogleheaders
}
